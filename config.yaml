# Central configuration for the minimal FSL-EC project

embedding:
  model: esm2_t12_35M_UR50D  # ESM2-t12-35M (UR50D)
  # limit removed for full run (set 'limit: 1000' temporarily for smoke tests)

# Device selection: "auto" â†’ cuda if available else cpu
device: auto

# Episode settings
episode:
  M: 10              # ways
  K_train: 5         # shots for training episodes
  K_eval: [1, 5]     # shots for evaluation episodes
  Q: 10              # queries per class

# Number of episodes
episodes:
  train: 1000
  val: 200
  eval: 500

# Embedding
batch_size_embed: 64  # raise on GPUs; reduce on CPU
max_seq_len: 1022     # full ESM2 context window
fp16: true            # enable FP16 inference on GPU
dynamic_batch: true   # reduce batch size automatically on OOM
progress: true
verbose: false

# Training knobs
fp16_train: false           # AMP for ProtoNet head (usually not needed)
eval_every: 100             # episodes between validations (auto if unset)
episodes_per_val_check: 50  # validation episodes per check
# Multi-label and hierarchy
multi_label: true           # allow sequences with multiple ECs; uses BCE loss on queries
hierarchy_levels: 2         # add auxiliary losses on EC levels (1..N), 0=off
hierarchy_weight: 0.2       # total weight for auxiliary hierarchical losses
# Identity-aware sampling (requires clusters_tsv)
identity_disjoint: true     # keep support/query disjoint by cluster within class when true

# Identity clustering (pipeline-generated)
cluster_identity: 0.5       # sequence identity threshold for clustering (MMseqs2/CD-HIT if available)
cluster_coverage: 0.5       # minimum coverage fraction for MMseqs2 clustering

# Identity benchmark (multi-threshold CV)
# Evaluate across multiple sequence-identity thresholds with cluster-level splits
# and per-threshold reporting. See scripts/prepare_identity_splits.py and
# scripts/run_identity_benchmark.py
id_thresholds: [10, 30, 50, 70, 100]   # percentage values
folds: 5
identity_definition: tool_default      # one of: global_pairwise | local_pairwise | tool_default
clustering_method: existing_id_cluster_module  # informational; tool actually used is auto-detected
stratify_by: EC_top                    # one of: EC_top | EC_full | none

# ProtoNet head
projection_dim: 256
temperature: 10.0

# Data filtering and splits
min_sequences_per_class_for_train: 40  # classes with < this go to meta-test pool
random_seed: 42
allow_multi_ec: true        # expand multi-EC rows so accession appears under each EC

# Fetch options
force_fetch: false           # pass --force-download to fetcher to refresh data

# Paths
paths:
  data_root: data/uniprot_ec
  joined_tsv: data/uniprot_ec/swissprot_ec_joined.tsv
  embeddings: data/emb/embeddings.npz
  splits_dir: data/splits
  outputs: results
  # Optional: TSV with two columns: accession\tcluster_id (for identity-aware sampling)
  # e.g., produced by MMseqs2/CD-HIT clustering
  clusters_tsv: data/identity/clusters.tsv
